name: Builder Clang For 4.19

on:
  workflow_dispatch:
    inputs:
      KERNEL_URL:
        description: 'Enter your Kernel Link'
        required: true
        default: 'https://github.com/zeta96/android_kernel_xiaomi_msm8937'

      KERNEL_BRANCH:
        description: 'Enter your Kernel branch'
        required: true
        default: 'mithorium/a13/master'
         
      KERNEL_DEFCONFIG:
        description: 'Enter the defconfig available in your kernel'
        required: true
        default: 'vendor/msm8937-perf_defconfig'

      KBUILD_USER:
        description: 'Enter the custom username build available in your kernel'
        required: true
        default: 'santoni'

      KBUILD_HOST:
        description: 'Enter the user custom host name available in your kernel'
        required: true
        default: 'git'  
        
      CLANG_URL:
        description: 'Clang Url'
        required: true
        default: 'https://raw.githubusercontent.com/ZyCromerZ/Clang/main/Clang-main-link.txt'
      WITH_KERNEL_SU:
        description: 'With kernelsu?, Dont activate it if the kernel doesnt support it '
        required: true
        default: 'true' 
      ZIP_NAME:
        description: 'Name for the zip file'
        required: true
        default: 'luuvy.k4.19-mi8937-clang-treble' 
      ANYKERNEL_URL:
        description: 'YOUR ANYKERNEL LINK'
        required: true
        default: 'https://github.com/zeta96/AnyKernel3 -b mithorium/generic'
      
                  
      
      

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
    - name: Display Run Parameters
      run: |
        echo "::group::User Environment Variables"
        echo "Kernel URL: ${{ github.event.inputs.KERNEL_URL }}"
        echo "Kernel BRANCH: ${{ github.event.inputs.KERNEL_BRANCH }}"
        echo "Kernel Defconfig: ${{ github.event.inputs.KERNEL_DEFCONFIG }}"
        echo "Clang URL: ${{ github.event.inputs.CLANG_URL }}"
        echo "With Kernelsu?: ${{ github.event.inputs.WITH_KERNEL_SU }}"
        echo "Zip name: ${{ github.event.inputs.ZIP_NAME }}"
        echo "Downloading AnyKernel: ${{ github.event.inputs.ANYKERNEL_URL }}"
        echo "::endgroup::"
 
    - name: Check Out
      uses: actions/checkout@v3

    - name: Cleanup
      run: rm -rf ${PWD}/*

    - name: Prepare the environment
      run: |
          sudo apt-get update && sudo apt-get upgrade
          sudo apt-get install -y build-essential bc gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi libssl-dev libfl-dev
          sudo apt-get install -y curl git ftp lftp wget libarchive-tools ccache 
          sudo apt-get install -y zip unzip tar gzip bzip2 rar unrar
          sudo apt-get -y install gcc llvm lld python-is-python3 clang gcc-aarch64-linux-gnu git libxml2 device-tree-compiler default-jre automake lzop bison gperf build-essential zip curl zlib1g-dev libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make cpio optipng bc libstdc++6 libncurses6 wget python3 python3-pip libssl-dev rsync flex git-lfs libz3-dev libz3-4 axel tar binutils-dev ca-certificates ccache cmake file libelf-dev ninja-build python3-dev texinfo u-boot-tools xz-utils libarchive-tools software-properties-common build-essential python-is-python3 libssl-dev openssl ssh
          sudo apt-get install wget -y
    
        
    - name: Setup SSH Keys
      uses: webfactory/ssh-agent@v0.5.4
      with:
          ssh-private-key: |
              ${{ secrets.SSH_PRIVATE_KEY }}

              
    - name: Set Properties
      run: |
        echo "BUILD_DATE=$(TZ=Asia/Jakarta date +%Y-%m-%d )" >> $GITHUB_ENV
        echo "BUILD_TIME=$(TZ=Asia/Jakarta date +%H:%M:%S)" >> $GITHUB_ENV
        
    
    - name: Create Folder
      run: |
       mkdir -p android && cd android

    - name: Clone Clang
      working-directory: android/
      run: |
       mkdir -p clang && cd clang
       wget -c -i ${{ github.event.inputs.CLANG_URL }} --show-progress
       tar -xvzf *.gz
       rm -f *.gz
   
    - name: Clone kernel tree
      working-directory: android/
      run: |
       git clone --depth=1 --recurse-submodules -j8 --single-branch ${{ github.event.inputs.KERNEL_URL }} -b ${{ github.event.inputs.KERNEL_BRANCH }} kernel       
       

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 16


    - name: Setup KernelSU
      working-directory: android/kernel
      if : ${{ github.event.inputs.WITH_KERNEL_SU == 'true' }}
      run: |
          rm -rf KernelSU
          rm -rf KernelSU-Next
          rm -rf drivers/staging/kernelsu
          rm -rf drivers/kernelsu
          rm -rf drivers/staging/KernelSU
          rm -rf drivers/KernelSU
          rm -rf drivers/staging/KernelSU-Next
          rm -rf drivers/KernelSU-Next
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next
          echo -e "CONFIG_KPROBES=n" >> arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
          echo -e "CONFIG_KSU_SUSFS_SUS_SU=n" >> arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
          echo -e "CONFIG_KSU=y" >> arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
          echo -e "CONFIG_KSU_DEBUG=n" >> arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
          echo -e "CONFIG_WITH_KPROBES=n" >> arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
          echo -e "CONFIG_KSU_ALLOWLIST_WORKAROUND=y" >> arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
          echo -e "CONFIG_POLLY_CLANG=y" >> arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
          cat arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
      continue-on-error: true    
                  
              
    - name: Building Kernel With Clang
      working-directory: android/kernel
      run: |
       rm -rf out
       mkdir -p out
       export USE_CCACHE=1 
       export CCACHE_COMPRESS=1 
       export CCACHE_MAXSIZE=50G 
       export ARCH=arm64
       export TZ=Asia/Jakarta
       export KBUILD_BUILD_USER=${{ github.event.inputs.KBUILD_USER }}
       export KBUILD_BUILD_HOST=${{ github.event.inputs.KBUILD_HOST }}
       export PATH="${GITHUB_WORKSPACE}/android/clang/bin:${PATH}"
       export CC=clang
       export CLANG_TRIPLE="aarch64-linux-gnu-"
       export CROSS_COMPILE="aarch64-linux-gnu-"
       export CROSS_COMPILE_ARM32="arm-linux-gnueabi-"
       export CROSS_COMPILE_COMPAT="arm-linux-gnueabi-"
       make ARCH=arm64 O=out CC=$CC ${{ github.event.inputs.KERNEL_DEFCONFIG }} \
       scripts/kconfig/merge_config.sh -O out/.config \
            vendor/msm8937-legacy.config \
            vendor/common.config \
            vendor/xiaomi/msm8937/common.config \
            vendor/xiaomi/msm8937/mi8937.config \
            vendor/debugfs.config \
            vendor/feature/android-12.config \
            vendor/feature/erofs.config \
            vendor/feature/exfat.config \
            vendor/feature/ntfs.config \
            vendor/feature/lmkd.config \
            vendor/feature/wireguard.config \
            vendor/feature/custom_kernel.config \
            vendor/feature/ksu_static_hooks.config

       make ARCH=arm64 O=out CC=$CC -j$(nproc --all) \
            LLVM=1 \
            LLVM_IAS=1 \
            2>&1 | grep -iE "error|warning" | tee build-short-${{ env.BUILD_DATE }}-${{ env.BUILD_TIME }}.log
       
      # make ARCH=arm64 O=out CC=$CC -j$(nproc --all) \
      #      LLVM=1 \
      #      LLVM_IAS=1 \
      #      2>&1 | tee build-${{ env.BUILD_DATE }}-${{ env.BUILD_TIME }}.log
       

    - name: Zipping Kernel
      working-directory: android/
      run: | 
            
            git clone --depth=1 ${{ github.event.inputs.ANYKERNEL_URL }} ./AnyKernel
            cd kernel/out/arch/arm64/boot && cp -r Image.gz-dtb ${GITHUB_WORKSPACE}/android/AnyKernel
            cd ${GITHUB_WORKSPACE}/android/AnyKernel
            zip -r9 ${{ github.event.inputs.ZIP_NAME }}-${{ env.BUILD_DATE }}-${{ env.BUILD_TIME }}.zip * -x .git README.md *placeholder
      continue-on-error: true
    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          android/kernel/out/arch/arm64/boot/Image.gz-dtb
          android/kernel/out/arch/arm64/boot/Image.gz
          android/kernel/out/arch/arm64/boot/Image
          android/kernel/out/arch/arm64/boot/*.dtb
          android/kernel/out/arch/arm64/boot/*.img
          android/kernel/out/arch/arm64/boot/dts/mediatek/*.dtb
          android/kernel/out/arch/arm64/boot/dts/mediatek/*.img
          android/kernel/out/arch/arm64/boot/dts/*.dtb
          android/kernel/out/arch/arm64/boot/dts/*.img
          android/AnyKernel/${{ github.event.inputs.ZIP_NAME }}-${{ env.BUILD_DATE }}-${{ env.BUILD_TIME }}.zip
          android/kernel/build-${{ env.BUILD_DATE }}-${{ env.BUILD_TIME }}.log
        name: Kernel Build | ${{ env.BUILD_DATE }}
        tag_name: ${{ github.run_id }}
        body: |
         ### Notes
          * Kernel were built/compiled using custom clang and gcc
          * Test at your own risk.
          * Use kernel flasher or any custom recoveries to flash the compressed kernel zip file.
